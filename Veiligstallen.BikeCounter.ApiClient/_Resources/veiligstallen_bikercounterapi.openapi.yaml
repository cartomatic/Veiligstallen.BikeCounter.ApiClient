openapi: 3.0.2
info:
  title: API CROW Datastandaard
  version: 0.0.0
servers:
  - url: https://remote.veiligstallenontwikkel.nl/rest/api/v2
paths:
  /auth:
    get:
      tags:
        - authentication
      summary: Get roles and permissions
      operationId: auth
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermissions'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '401':
          description: Not authorized
  /organisations:
    get:
      tags:
        - organisations
      summary: All Organisations
      operationId: all_organisations_organisations_get
      parameters:
        - required: false
          schema:
            title: Orderby
            type: string
          name: orderBy
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortingDirection'
            default: ASC
          name: orderDirection
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
            default: 0
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response All Organisations Organisations Get
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /organisations/{organisation_id}:
    get:
      tags:
        - organisations
      summary: Get Organisation
      operationId: get_organisation_organisations__organisation_id__get
      parameters:
        - required: true
          schema:
            title: Organisation Id
            type: string
          name: organisation_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /surveys:
    get:
      tags:
        - surveys
      summary: All Surveys
      operationId: all_surveys_surveys_get
      parameters:
        - required: false
          schema:
            title: Orderby
            type: string
          name: orderBy
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortingDirection'
            default: ASC
          name: orderDirection
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
            default: 0
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response All Surveys Surveys Get
                type: array
                items:
                  $ref: '#/components/schemas/Survey'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - surveys
      summary: Add Survey
      operationId: add_survey_surveys_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /surveys/{survey_id}:
    get:
      tags:
        - surveys
      summary: Get Survey
      operationId: get_survey_surveys__survey_id__get
      parameters:
        - required: true
          schema:
            title: Survey Id
            type: string
          name: survey_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - surveys
      summary: Update Survey
      operationId: update_survey_surveys__survey_id__put
      parameters:
        - required: true
          schema:
            title: Survey Id
            type: string
          name: survey_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /surveys/{survey_id}/survey-areas:
    get:
      tags:
        - surveys
      summary: Get Survey areas for given survey
      operationId: get_survey_surveys__survey_id__survey_areas_get
      parameters:
        - required: true
          schema:
            title: Survey Id
            type: string
          name: survey_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - surveys
      summary: Connect Survey areas to survey. Any existing survey areas will be overwritten.
      operationId: add_survey_survey-areas_post
      parameters:
        - required: true
          schema:
            title: Survey Id
            type: string
          name: survey_id
          in: path
      requestBody:
          content:
            application/json:
              schema:
                title: Array of survey area ids
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - surveys
      summary: Add Survey areas to survey. They will be added to the existing survey areas.
      operationId: put_survey_survey-areas
      parameters:
        - required: true
          schema:
            title: Survey Id
            type: string
          name: survey_id
          in: path
      requestBody:
          content:
            application/json:
              schema:
                title: Array of survey area ids
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /surveys/{survey_id}/survey-areas/{survey_area_id}:
    delete:
      tags:
        - surveys
      summary: Disconnects a Survey areas from a survey.
      operationId: delete_survey_survey-areas
      parameters:
        - required: true
          schema:
            title: Survey Id
            type: string
          name: survey_id
          in: path
        - required: true
          schema:
            title: Survey Area Id
            type: string
          name: survey_area_id
          in: path
      responses:
        '200':
          description: Successful Response
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /survey-areas:
    get:
      tags:
        - survey areas
      summary: All Surveyareas
      operationId: all_surveyAreas_survey_areas_get
      parameters:
        - required: false
          schema:
            title: Orderby
            type: string
          name: orderBy
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortingDirection'
            default: ASC
          name: orderDirection
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
            default: 0
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
            default: 0
          name: offset
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response All Surveyareas Survey Areas Get
                type: array
                items:
                  $ref: '#/components/schemas/SurveyArea'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - survey areas
      summary: Add Surveyarea
      operationId: add_surveyArea_survey_areas_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyArea'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyArea'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /survey-areas/{surveyArea_id}:
    get:
      tags:
        - survey areas
      summary: Get Surveyarea
      operationId: get_surveyArea_survey_areas__surveyArea_id__get
      parameters:
        - required: true
          schema:
            title: Surveyarea Id
            type: string
          name: surveyArea_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyArea'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - survey areas
      summary: Update Surveyarea
      operationId: update_surveyArea_survey_areas__surveyArea_id__put
      parameters:
        - required: true
          schema:
            title: Surveyarea Id
            type: string
          name: surveyArea_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyArea'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyArea'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /parking-locations:
    post:
      tags:
        - parking locations
      summary: Add Parking location
      operationId: add_parking_location_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParkingLocation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingLocation'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - parking locations
      summary: All Parking locations
      operationId: all_parking-locations_get
      parameters:
        - required: false
          schema:
            title: Orderby
            type: string
          name: orderBy
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortingDirection'
            default: ASC
          name: orderDirection
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
            default: 0
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
            default: 0
          name: offset
          in: query
        - description: 'List of lat lng coordinates, the last point must equal the first to close the shape: lat1,lng1,lat2,lng2,lat3,lng3,lat1,lng1'
          required: false
          schema:
            title: Geopolygon
            type: string
            default: null
          name: geopolygon
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/GeoRelation'
            default: intersects
          name: georelation
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response All Organisations Organisations Get
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /parking-locations/{parkingLocation_id}:
    get:
      tags:
        - parking locations
      summary: Get Parking Locatio
      operationId: get_parkingLocation_parking_locations__parkingLocation_id__get
      parameters:
        - required: true
          schema:
            title: Parking location Id
            type: string
          name: parkingLocation_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingLocation'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - parking locations
      summary: Update Parking Location
      operationId: update_parkingLocation_parking_locations__parkingLocation_id__put
      parameters:
        - required: true
          schema:
            title: ParkingLocation Id
            type: string
          name: parkingLocation_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParkingLocation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingLocation'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /sections:
    post:
      tags:
        - sections
      summary: Add Section
      operationId: add_section_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - sections
      summary: All Sections
      operationId: all_sections_get
      parameters:
        - required: false
          schema:
            title: Orderby
            type: string
          name: orderBy
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortingDirection'
            default: ASC
          name: orderDirection
          in: query
        - required: false
          schema:
            title: Limit
            type: integer
            default: 0
          name: limit
          in: query
        - required: false
          schema:
            title: Offset
            type: integer
            default: 0
          name: offset
          in: query
        - description: 'List of lat lng coordinates, the last point must equal the first to close the shape: lat1,lng1,lat2,lng2,lat3,lng3,lat1,lng1'
          required: false
          schema:
            title: Geopolygon
            type: string
            default: null
          name: geopolygon
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/GeoRelation'
            default: intersects
          name: georelation
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response All Organisations Organisations Get
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /parking-locations/{parkingLocation_id}/sections:
    get:
      tags:
        - sections
      summary: Get Sections for Parking Location
      operationId: get_section_post_for_parking_location
      parameters:
        - required: true
          schema:
            title: Parking Location Id
            type: string
          name: parkingLocation_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /sections/{section_id}:
    get:
      tags:
        - sections
      summary: Get Section
      operationId: get_section__section_id__get
      parameters:
        - required: true
          schema:
            title: Section Id
            type: string
          name: section_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - sections
      summary: Update Section
      operationId: update_Section__Section_id__put
      parameters:
        - required: true
          schema:
            title: Section Id
            type: string
          name: section_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Section'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Section'
        '404':
          description: Not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    CanonicalVehicle:
      title: CanonicalVehicle
      type: object
      properties: {}
    User:
      title: User
      required:
        - username
      type: object
      properties:
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
    UserPermissions:
      title: User permissions
      type: object
      properties:
        roles:
          title: username
          type: array
          items:
            description: role
            type: string
    Organisation:
      title: Organisation
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
    GeoRelation:
      title: GeoRelation
      enum:
        - intersects
        - within
      type: string
      description: An enumeration.
    SortingDirection:
      title: SortingDirection
      enum:
        - ASC
        - DESC
      type: string
      description: An enumeration.
    Survey:
      title: Survey
      required:
        - name
        - authority
        - license
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        authority:
          title: Authority
          type: string
        contractors:
          title: Contractors
          uniqueItems: true
          type: array
          items:
            type: string
          default: []
        license:
          title: License
          type: string
        distinguishesVehicleCategories:
          title: Distinguishesvehiclecategories
          type: array
          items:
            $ref: '#/components/schemas/CanonicalVehicle'
          default: []
    SurveyArea:
      title: SurveyArea
      required:
        - authority
      type: object
      properties:
        id:
          title: Id
          type: string
        localId:
          title: LocalId
          type: string
        name:
          title: Name
          type: string
        geoLocation:
          $ref: '#/components/schemas/GeoShape'
        parent:
          title: Parent
          type: string
        validFrom:
          title: Validfrom
          type: string
          format: date-time
        validThrough:
          title: Validthrough
          type: string
          format: date-time
        authority:
          title: Authority
          type: string
        xtraInfo:
          title: XtraInfo
          type: string
    ParkingLocation:
      title: ParkingLocation
      required:
        - authority
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
        geoLocation:
          $ref: '#/components/schemas/GeoShape'
        validFrom:
          title: Validfrom
          type: string
          format: date-time
        validThrough:
          title: Validthrough
          type: string
          format: date-time
        authority:
          title: Authority
          type: string
        name:
          title: Name
          type: string
        localId:
          title: LocalId
          type: string
        allows:
          $ref: '#/components/schemas/Vehicle'
        features:
          title: SurveyAreaType
          uniqueItems: true
          type: array
          items:
            enum:
              - cameraSurveillance
              - lockerService
              - personnelSupervision
              - electronicAccess
              - indoor
              - surfaceParking
          default: []
    Section:
      title: Section
      required:
        - parkingLocation
        - authority
      type: object
      properties:
        id:
          title: Id
          type: string
        geoLocation:
          $ref: '#/components/schemas/GeoShape'
        parkingLocation:
          title: ParkingLocation
          type: string
        validFrom:
          title: Validfrom
          type: string
          format: date-time
        validThrough:
          title: Validthrough
          type: string
          format: date-time
        authority:
          title: Authority
          type: string
        name:
          title: Name
          type: string
        localId:
          title: LocalId
          type: string
        level:
          title: Level
          type: integer
        parkingSystemType:
          title: ParkingSystemType
          type: string
          description: r = rek, o = etagerek onder, b = etagerek boven, n = nietje, x = geen voorziening
    Vehicle:
      title: Vehicle
      properties:
        type:
          title: Type
          type: string
          enum:
            - f
            - c
            - s
            - b
            - m
            - g
            - a
          description: Vehicle definition (f = fiets, c = bakfiets, s = snorfiets, b = bromfiets, m = motorfiets, g = gehandicaptenvoertuig, a = anders)
    GeoShape:
      title: GeoShape
      properties:
        type:
          title: Type
          type: string
          enum:
            - MultiPolygon
            - Polygon
            - Point
          description: Type of shape
        coordinates:
          title: Coordinates
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: number
      example:
        coordinates:
          - - - - 4.459809327222
                - 51.540021027027
              - - 4.459936684027
                - 51.539941811035
              - - 4.459942559039
                - 51.539950459234
              - - 4.459809327222
                - 51.540021027027
            - - - 4.459809327222
                - 51.540021027027
              - - 4.459936684027
                - 51.539941811035
              - - 4.459942559039
                - 51.539950459234
              - - 4.459809327222
                - 51.540021027027
        type: MultiPolygon
      description: follow format as described in https://www.elastic.co/guide/en/elasticsearch/reference/current/shape.html
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
